
INTERNET DRAFT                                        Tomasz Mrugalski
<draft-mrugalski-addropts-XX.txt>                                  GUT
Expires [publish-date+6 months]                    [not-published-yet]


                  Address Parameters Option for DHCPv6

Status of this memo

   This is an unofficial "draft of a draft". If the informal feedback
   is encouraging, it will be expanded into -00 version and will be
   formally registed as individual submission.

   [add links and reference to Section 10 of RFC2026 here]

Copyright Notice

   No copyright yet. Feel free to distribute and/or contribute.

Abstract

   DHCPv6 protocol offers the capability of automatic allocation of
   reusable IPv6 addresses to all interested clients. Unfortunately,
   there is no way to specify additional parameters related to such
   addresses, like prefix length they belong to. When several clients 
   located on the same link receive addresses from the same prefix,
   without additional mechanisms they can't communicate. Upon IPv6
   address reception, prefix is not known, so clients can assign that
   address only or guess prefix length (e.g. /64). 

   Another limitation is an inability to grant addresses of types
   other than unicast. It is also not possible to define scope of an
   address. This document proposes a way to solve all those problems.

Table of Contents

1. Introduction

   By using Address Parameters option, server is able to specify
   prefix length of the granted address, so besides configuring the
   address itself, client is able to configure corresponding route as well.
   
   It is also possible for server to assign addresses with types other
   than normal unicast. Server can grant multicast or anycast
   addresses.

2. Requirements

   Implementation of the DHCPv6 protocol, which supports Address
   Parameters Option. [If initial version of this draft is accepted,
   author will provide example implementation of this mechanism.]

3. Operation overview

   If client supports Address Parameters Option it SHOULD send 
   OPTION_ADDRPARAMS in the Option Request Option in SOLICIT, REQUEST,
   RENEW and REBIND messages.

   Server, upon receiving such message, if configured to support
   Address Parameters Option, SHOULD attach that option as a suboption
   to every granted address. Due to backward compatibility, server 
   MUST NOT attach Address Parametere Option, unless client asked for
   it explicely in ORO.

   All DHCPv6 mechanisms work as defined in RFC3315. When Address
   Parameters Option is used, every IAADDR option contains exactly
   one Address Parameters suboption.

3.1 Client operation

   If client is configured to use Address Parameters option, it MUST
   attach OPTION_ADDRPARAMS to Option Request Option list. Client CAN
   ask for ADDRPARAMS option in the SOLICIT, REQUEST, RENEW and REBIND
   messages only. Client MUST NOT use ADDRPARAMS option in the ORO in
   any other messages.

3.2 Server operation

   Server appends Address Parameters option to all IAADDR options sent
   to a client, which requested IA configuration and asked for Address
   Parameters option. Server, by default, MUST NOT attach this option,
   unless specificaly asked by the client.

4. Address parameters option

   The Address Parameters option is sent by a server to a client to
   provide additional informations about granted addresses. Address 
   Parameters Option can only be sent as a suboption of the IAADDR
   option. It can be sent by the server to define addtional address
   parameters. It can also be sent by the client in SOLICIT or REQUEST
   messages as a hint for the server.

   The format of the Preference option is:

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |       OPTION_ADDRPARAMS       |          option-len           |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |  prefix-len   |   flags       |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      option-code   OPTION_ADDRPARAMS (TBD).

      option-len    2.

      prefix-len    Prefix length. Allowed values are: 0-128

      flags         Defines type of the address and additional
                    information. See following subsection for details.

4.1.  The Flags Field

   The format of the Flags field is:

        0 1 2 3 4 5 6 7
       +-+-+-+-+-+-+-+-+
       |  MBZ    |M|A|P|
       +-+-+-+-+-+-+-+-+

       MBZ - reserved field (must be zero)
       M   - is this multicast address? (1 = yes, 0 = no)
       A   - is this anycast address? (1 = yes, 0 = no)
       P   - should prefix information be ignored? (1 = ignore, 0 =
             prefix field contains valid information)

   [Values are choosen in that way, so during most use scenarios,
   flags field will remain set to 0.]

5. Compatibility issues
  
  Clients not supporting this option may be unable to parse IADDR
  option, which contains ADDRPARAMS option. Therefore server MUST
  NOT send ADDRPARAMS, unless explicitely asked to do so by the 
  client (by mentioning ADDRPARAMS in the Option Request Option).

6. Open issues

6.1 Address scope

 Would it be useful to add 4-bit field, which describes scope of the
 address (link, site or global)? (host scope would not be allowed, 
 organisation scope is depreciated).

6.2 Client hints

 It may be useful to allow client to send ADDRPARAMS in SOLICIT and
 REQUEST messages as a hint. Client could use this feature to ask for
 a specific type of the address. Server could honor or ignore this
 hint. 

7. Security Considerations


8. IANA Considerations


9. References


10. Acknowledgements

  Thanks for the initial idea and encouragement to prepare this draft
  to Alain Durand.

11. Authors' Addresses

   Tomasz Mrugalski
   Gdansk University of Technology
   ul. Cieszynskiego 16/56
   80-809 Gdansk
   Poland

   Phone: +48 698 088 272
   EMail: tomasz.mrugalski@klub.com.pl
